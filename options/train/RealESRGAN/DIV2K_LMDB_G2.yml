# general settings
name: train_RealESRGAN_DIV2K_LMDB_G2
model_type: RealESRGANModel
scale: 1
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 2 GPUs
manual_seed: 0

# ----------------- options for synthesizing training data in RealESRGANModel ----------------- #
# USM the ground-truth
l1_gt_usm: False
percep_gt_usm: False
gan_gt_usm: False

# dataset and data loader settings
datasets:
  train:
    name: DIV2K
    type: RealESRGANPairedDataset
    dataroot_gt: datasets/DIV2K/train_size256_step128_thresh0.lmdb
    dataroot_lq: datasets/DIV2K/train_BPG_QP37_size256_step128_thresh0.lmdb
    io_backend:
      type: lmdb

    gt_size: 256  # in accord with LMDB
    use_hflip: True
    use_rot: False

    # data loader
    num_worker_per_gpu: 12
    batch_size_per_gpu: 24
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: DIV2K
    type: RealESRGANPairedDataset
    dataroot_gt: datasets/DIV2K/valid
    dataroot_lq: datasets/DIV2K/valid_BPG_QP37
    io_backend:
      type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  num_grow_ch: 32
  scale: 1  # default scale=4

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: experiments/train_RealESRGAN_RealESRNet_DIV2K_LMDB_G2/models/net_g_latest.pth  # TODO: may switch to the best
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [400000]
    gamma: 0.5

  total_iter: 400000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l1
  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1

  net_d_iters: 1
  net_d_init_iters: 0

# validation settings
val:
  val_freq: !!float 5e4
  save_img: False

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    fid:
      type: pyiqa
    lpips:
      type: pyiqa

# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: !!float 5e4
  use_tb_logger: true

# dist training settings
dist_params:
  backend: nccl
  port: 29500
